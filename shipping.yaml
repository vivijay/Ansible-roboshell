- name: Install Shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: Install maven
    ansible.builtin.yum:
      name: maven
      state: installed
  
  - name: Check roboshop user exists or not 
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  
  - when: output.rc != 0
    name: create user roboshop
    ansible.builtin.user
      name: roboshop

  - name: create app directory
    ansible.builtin.stat:
      name: /app
    register: directory

  - when: directory.stat.exists == False
    name: Creating the directory file
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download and extract 
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name : copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: deamon reload 
    ansible.builtin:systemd:
      daemon_reload: true


  - name: Installing mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: loading mysql schema for shipping data 
    ansible.builtin.shell: mysql -h mysql.learndevcloud.online -uroot -pRoboShop@1 < /app/schema/shipping.sql

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true

  