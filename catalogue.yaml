- name: Install catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: set up npm resource 
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: Install node js 
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: Check roboshop user exists or not 
    ansible.builtin.command: id roboshop
    register: out # output is a variable name 
    ignore_errors: true

  - when: out.rc != 0
    name: Create roboshop user 
    become: yes # we need sudo acess for this  task only 
    ansible.builtin.user:
      name: roboshop

  - name: Create /app directory
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: Print the directory stats
    ansible.builtin.debug:
      msg: "Output is {{directory}} "

  - when: directory.stat.exists == False
    name: Creating the directory file and folders
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download catalogue artifact
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
  
  - name: archive the file 
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy the service file to destination location
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: copy mongo repo to yum.repos.d
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo
  
  - name: Install Mongodb client
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: Load schema 
    ansible.builtin.command: mongo --host mongodb.learndevcloud.online < /app/schema/catalogue.js

  - name: restart the service 
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: true


  
  


  




